// The stuff from wired code handles. Unsure if I like it at all.


//let srcCodeBlockId, dstCodeBlockId;
//let connections = [];

...
      const svg = document.getElementById("svgConnections");
      svg.innerHTML = "";
      for (let connection of connections) {
        let { src, dst } = connection;
        connectDivs(src, dst);
      }
      if (connections) {
        document.getElementById("svgContainer").classList.add("show");
      }
...


/*
const wireHandle = (code) => {
  // created handle here
  const handle = code.querySelector(".handle");
  console.log(code, handle);
  if (!handle) {
    // TODO(me) Fix assignment deleting the handle
    return;
  }
  handle.id = code.id.replace("c", "h");
  handle.classList.add("draggable-handle");

  console.log("Should be thereâ€¦");
  handle.addEventListener("dragstart", (event) => {
    console.log("draggin");
    srcCodeBlockId = event.target.id;
  });
  handle.addEventListener("dragover", (event) => {
    event.preventDefault();
  });
  handle.addEventListener("dragenter", (event) => {
    // highlight potential drop target when the draggable element enters it
    if (event.target.classList.contains("draggable-handle")) {
      event.target.classList.add("dragover");
    }
  });
  handle.addEventListener("dragleave", (event) => {
    // reset background of potential drop target when the draggable element leaves it
    if (event.target.classList.contains("draggable-handle")) {
      event.target.classList.remove("dragover");
    }
  });
  handle.addEventListener("drop", (event) => {
    event.preventDefault();
    if (event.target.classList.contains("draggable-handle")) {
      event.target.classList.remove("dragover");
    }
    dstCodeBlockId = event.target.id;
    console.log(`Dragged from ${srcCodeBlockId} to ${dstCodeBlockId}`);
    //connectDivs(srcCodeBlockId, dstCodeBlockId);
    connections.push({ src: srcCodeBlockId, dst: dstCodeBlockId });
  });
};
*/


/*
function connectDivs(div1Id, div2Id) {
  const div1 = document.getElementById(div1Id);
  const div2 = document.getElementById(div2Id);

  const div1Rect = div1.getBoundingClientRect();
  const div2Rect = div2.getBoundingClientRect();

  const x1 = div1Rect.left - 4;
  const y1 = div1Rect.top - 4;
  const x2 = div2Rect.left - 4;
  const y2 = div2Rect.top - 4;

  createSVGLine(x1, y1, x2, y2);
}

function createSVGLine(x1, y1, x2, y2) {
  const svgContainer = document.getElementById("svgConnections");
  const svgNS = "http://www.w3.org/2000/svg";
  const line = document.createElementNS(svgNS, "line");

  line.setAttribute("x1", x1);
  line.setAttribute("y1", y1);
  line.setAttribute("x2", x2);
  line.setAttribute("y2", y2);
  line.classList.add("connecting-line");

  svgContainer.appendChild(line);
}

*/
